{"version":3,"sources":["components/Footer.js","components/SearchBar.js","constants/orderConstants.js","constants/userConstants.js","actions/userActions.js","components/Header.js","components/Rating.js","components/Product.js","components/Loading.js","components/Message.js","components/Paginator.js","components/ProductCarousel.js","constants/productConstants.js","actions/productActions.js","screens/HomeScreen.js","components/Review.js","screens/ProductScreen.js","constants/cartConstants.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductCreateScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","index.js"],"names":["Footer","className","Container","Row","Col","SearchBar","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","type","name","onChange","target","value","Button","variant","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_RESET","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_USER_REQUEST","ORDER_LIST_USER_SUCCESS","ORDER_LIST_USER_FAIL","ORDER_LIST_USER_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_LIST_RESET","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_PROFILE_REQUEST","USER_PROFILE_SUCCESS","USER_PROFILE_FAIL","USER_PROFILE_RESET","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_DELETE_RESET","USER_UPDATE_ADMIN_REQUEST","USER_UPDATE_ADMIN_SUCCESS","USER_UPDATE_ADMIN_FAIL","USER_UPDATE_ADMIN_RESET","getUserProfile","id","dispatch","getState","a","user","userLogin","config","headers","token","axios","get","data","payload","response","detail","message","Header","useDispatch","useSelector","state","logoutHandler","localStorage","removeItem","then","_","Navbar","bg","expand","to","Brand","Toggle","aria-controls","Collapse","Nav","exact","Link","NavDropdown","title","Item","onClick","isAdmin","Rating","text","color","stars","starCounter","i","style","renderStars","Product","product","Card","_id","Img","src","image","Body","Title","slice","rating","numReviews","Text","price","Loading","height","width","Spinner","animation","role","margin","display","Message","children","Alert","padding","Paginator","numPages","page","split","Pagination","Array","keys","map","x","active","ProductCarousel","products","Carousel","pause","fade","Caption","position","bottom","fontSize","Image","fluid","roundedCircle","objectFit","objectPosition","alt","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_TOP_LIST_REQUEST","PRODUCT_TOP_LIST_SUCCESS","PRODUCT_TOP_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_DELETE_RESET","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_IMAGE_UPLOAD_REQUEST","PRODUCT_IMAGE_UPLOAD_SUCCESS","PRODUCT_IMAGE_UPLOAD_FAIL","PRODUCT_REVIEW_CREATE_REQUEST","PRODUCT_REVIEW_CREATE_SUCCESS","PRODUCT_REVIEW_CREATE_FAIL","PRODUCT_REVIEW_CREATE_RESET","listProducts","displayProduct","productImageUploadAction","formData","post","HomeScreen","productList","error","loading","topProductsList","topProducts","loadingTopProducts","search","useEffect","xs","md","lg","xl","Review","comment","date","ProductScreen","match","qty","setQty","setRating","setComment","currentProduct","productDetails","productReviewCreate","loadingReview","messageReview","errorReview","params","setTimeout","ListGroup","textAlign","textJustify","description","countInStock","as","size","block","disabled","reviews","length","review","Date","createdAt","toLocaleString","dateStyle","timeStyle","hourCycle","reviewData","productReviewCreateAction","Group","controlId","Label","rows","Number","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_RESET","addToCart","totalPrice","setItem","JSON","stringify","cart","cartItems","CartScreen","productId","removeFromCartHandler","removeFromCart","cartItem","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","errorMessage","setErrorMessage","infoMessage","setInfoMessage","redirect","currentUser","loggingIn","submitHandler","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","passwordError","setPasswordError","registeredUser","userRegister","registering","required","isInvalid","Boolean","FormControl","Feedback","ProfileScreen","passwordErrorMessage","setMessage","userProfile","updatedUserProfile","updateUserProfile","userOrders","orders","loadingOrders","errorOrders","userInfo","success","put","Table","striped","bordered","hover","order","isPaid","isDelivered","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postCode","setPostCode","province","setProvince","country","setCountry","FormGroup","PaymentScreen","paymentMethod","setPaymentMethod","Check","label","checked","PlaceOrderScreen","orderCreate","itemsPrice","item","shippingPrice","taxPrice","orderData","orderItems","console","log","orderCreateAction","OrderScreen","orderId","sdkReady","setSdkReady","orderDetails","orderPay","successPay","loadingPay","orderDeliver","successDeliver","loadingDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","href","username","deliveredAt","paidAt","amount","onSuccess","paymentResult","orderPayAction","UserListScreen","userList","users","userDelete","successDelete","messageDelete","deleteHandler","userId","delete","responsive","UserEditScreen","setIsAdmin","userUpdate","loadingUpdate","successUpdate","errorUpdate","userData","userUpdateAction","ProductListScreen","productCreate","loadingProduct","errorProduct","successProduct","productDelete","loadingDelete","errorDelete","maxWidth","brand","category","ProductCreateScreen","setBrand","setCategory","setPrice","setImage","setDescription","setCountInStock","isActive","setIsActive","productUpdate","productImage","productImageUpload","loadingImage","errorImage","productData","productUpdateAction","uploadImageHandler","imageFile","files","FormData","append","min","step","File","custom","OrderListScreen","orderList","displayOrderItems","setDisplayOrderItems","getOrderTotal","o","displayItems","backgroundColor","minWidth","includes","filter","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","existItem","find","updating","cartItemsFromStorage","getItem","parse","userFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2b68b1a7.chunk.js","sourcesContent":["import React from 'react'\n\n//import local components\n\n//import third-party components\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction Footer() {\n    return (\n        <footer className=\"bg-primary text-white\">\n            <Container>\n                <Row>\n                    <Col className=\"text-center py-3\">Copyright &copy; Bhawan</Col>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React, { useState } from 'react'\nimport { Button, Form } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\n\nfunction SearchBar() {\n    const [keyword, setKeyword] = useState('')\n    let history = useHistory()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if(keyword) {\n            history.push(`/?keyword=${keyword}&page=1`)\n        } else {\n            history.push(history.location.pathname)\n        }\n    }\n    return (\n        <Form onSubmit={submitHandler} inline>\n            <Form.Control \n                type=\"text\"\n                name=\"q\"\n                onChange={e => setKeyword(e.target.value)}\n                className=\"mr-sm-2 ml-sm-5\"\n            />\n            <Button type=\"submit\" variant=\"success\" className=\"p-2\">Search</Button>\n        </Form>\n    )\n}\n\nexport default SearchBar\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\nexport const ORDER_DETAILS_RESET = 'ORDER_DETAILS_RESET'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_USER_REQUEST = 'ORDER_LIST_USER_REQUEST'\nexport const ORDER_LIST_USER_SUCCESS = 'ORDER_LIST_USER_SUCCESS'\nexport const ORDER_LIST_USER_FAIL = 'ORDER_LIST_USER_FAIL'\nexport const ORDER_LIST_USER_RESET = 'ORDER_LIST_USER_RESET'\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\nexport const ORDER_LIST_RESET = 'ORDER_LIST_RESET'\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_PROFILE_REQUEST = 'USER_PROFILE_REQUEST'\nexport const USER_PROFILE_SUCCESS = 'USER_PROFILE_SUCCESS'\nexport const USER_PROFILE_FAIL = 'USER_PROFILE_FAIL'\nexport const USER_PROFILE_RESET = 'USER_PROFILE_RESET'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\nexport const USER_DELETE_RESET = 'USER_DELETE_RESET'\n\nexport const USER_UPDATE_ADMIN_REQUEST = 'USER_UPDATE_ADMIN_REQUEST'\nexport const USER_UPDATE_ADMIN_SUCCESS = 'USER_UPDATE_ADMIN_SUCCESS'\nexport const USER_UPDATE_ADMIN_FAIL = 'USER_UPDATE_ADMIN_FAIL'\nexport const USER_UPDATE_ADMIN_RESET = 'USER_UPDATE_ADMIN_RESET'","import axios from 'axios'\nimport { ORDER_LIST_USER_RESET } from '../constants/orderConstants'\n\nimport { \n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_PROFILE_REQUEST,\n    USER_PROFILE_SUCCESS,\n    USER_PROFILE_FAIL,\n    USER_PROFILE_RESET,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_UPDATE_RESET,\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n    USER_DELETE_REQUEST,\n    USER_DELETE_FAIL,\n    USER_DELETE_SUCCESS,\n    USER_UPDATE_ADMIN_REQUEST,\n    USER_UPDATE_ADMIN_SUCCESS,\n    USER_UPDATE_ADMIN_FAIL,\n } from '../constants/userConstants'\n\n export const userLogin = (email, password) => async dispatch => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST,\n        })\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const { data } = await axios.post('api/users/login/', {'username': email, 'password': password }, config)\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n        localStorage.setItem('user', JSON.stringify(data))\n    } catch(error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n }\n\n export const userLogout = () => async dispatch => {\n    localStorage.removeItem('user')\n    localStorage.removeItem('shippingAddress')\n     dispatch({\n         type: USER_LOGOUT\n     })\n     dispatch({\n         type: USER_PROFILE_RESET\n     })\n     dispatch({\n         type: ORDER_LIST_USER_RESET\n     })\n     dispatch({\n         type: USER_LIST_RESET\n     })\n\n }\n\n export const userRegister = (email, name, password) => async (dispatch) => {\n     try {\n         dispatch({\n             type: USER_REGISTER_REQUEST\n         })\n         const config = {\n             headers: {\n                 'Content-Type': 'application/json'\n             }\n         }\n         const { data } = await axios.post('/api/users/register/', {'email': email, 'name': name, 'password': password}, config)\n         dispatch({\n             type: USER_REGISTER_SUCCESS,\n             payload: data\n         })\n\n         dispatch({\n             type: USER_LOGIN_SUCCESS,\n             payload: data\n         })\n         localStorage.setItem('user', JSON.stringify(data))\n     } catch(error) {\n         dispatch({\n             type: USER_REGISTER_FAIL,\n             payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n         })\n     }\n }\n\n export const getUserProfile = (id) => async (dispatch, getState) => {\n     try {\n        dispatch({\n            type: USER_PROFILE_REQUEST\n        })\n        const { userLogin: { user } } = getState()\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${user.token}`\n            }\n        }\n        const { data } = await axios.get(`/api/users/${id}/`, config)\n        dispatch({\n            type: USER_PROFILE_SUCCESS,\n            payload: data\n        })\n     } catch(error) {\n        dispatch({\n            type: USER_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n     }\n }\n\n export const updateUserProfile = (userInfo) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n        const { userLogin: { user } } = getState()\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${user.token}`\n            }\n        }\n        const { data } = await axios.put(`/api/users/profile/update/`, userInfo,  config)\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n            payload: data\n        })\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data,\n        })\n        localStorage.setItem('user', JSON.stringify(data))\n    } catch(error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n }\n\n export const userUpdateProfileReset = () => async dispatch => {\n     dispatch({\n         type: USER_UPDATE_RESET\n     })\n }\n\n export const userListAction = () => async (dispatch, getState) => {\n     try {\n         dispatch({\n             type: USER_LIST_REQUEST\n         })\n         const { userLogin: { user } } = getState()\n         const config = {\n             'headers': {\n                 'Authorization': `Bearer ${user.token}`\n             }\n         }\n\n         const { data } = await axios.get('/api/users/', config)\n\n         dispatch({\n             type: USER_LIST_SUCCESS,\n             payload: data\n         })\n\n     } catch(error) {\n         dispatch({\n             type: USER_LIST_FAIL,\n             payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n         })\n     }\n }\n\n export const userDeleteAction = (id) => async (dispatch, getState) => {\n     try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const { userLogin: { user }} = getState()\n        const config = {\n            'headers': {\n                'Authorization': `Bearer ${user.token}`\n            }\n        }\n        const { data } = await axios.delete(`/api/users/delete/${id}/`, config)\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data.detail\n        })\n     } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n     }\n }\n\n export const userUpdateAction = (id, userData) => async (dispatch, getState) => {\n     try {\n        dispatch({\n            type: USER_UPDATE_ADMIN_REQUEST\n        })\n        const { userLogin: { user } } = getState()\n        const config = {\n            'Content-Type': 'application/json',\n            'headers': {\n                'Authorization': `Bearer ${user.token}`\n            }\n        }\n        const { data } = await axios.put(`/api/users/update/${id}/`, userData, config)\n        dispatch({\n            type: USER_UPDATE_ADMIN_SUCCESS,\n            payload: data\n        })\n     } catch(error) {\n        dispatch({\n            type: USER_UPDATE_ADMIN_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n     }\n }","import React from 'react'\n\n//import local components\nimport SearchBar from './SearchBar'\nimport { userLogout } from '../actions/userActions'\n\n//import third-party components and libraries\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\n\n//import styles\nimport '../styles/components/Header.css'\n\nfunction Header({ history }) {\n    const dispatch = useDispatch()\n    const currentUser = useSelector(state => state.userLogin)\n    const { user } = currentUser\n\n    const logoutHandler = (e) => {\n        e.preventDefault()\n        dispatch(userLogout())\n        .then((_) => {\n            return history?.push(\"/\")\n        })\n    }\n\n    return (\n        <Navbar bg=\"primary\" expand=\"lg\" variant=\"dark\" className=\"header p-3 mb-3\">\n            <Container>\n                <LinkContainer to='/'>\n                    <Navbar.Brand>MY SHOP</Navbar.Brand>\n                </LinkContainer>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <SearchBar />\n                    \n                    <Nav className=\"ml-auto\">\n                        <LinkContainer exact to=\"/\">\n                            <Nav.Link><i className=\"fas fa-home\"></i> HOME</Nav.Link>\n                        </LinkContainer>\n                        <LinkContainer to=\"/cart\">\n                            <Nav.Link><i className=\"fas fa-shopping-cart\"></i> CART</Nav.Link>\n                        </LinkContainer>\n                        {user ? (\n                            <NavDropdown title={<span><i className=\"fas fa-id-badge\"></i> {user.name}</span>} id=\"username\">\n                                <LinkContainer to=\"/profile\">\n                                    <NavDropdown.Item><i className=\"fas fa-user-circle\"></i> PROFILE</NavDropdown.Item>\n                                </LinkContainer>\n                    \n                                <NavDropdown.Item onClick={e => logoutHandler(e)}><i className=\"fas fa-sign-out-alt\"></i> SIGN OUT</NavDropdown.Item>\n        \n                            </NavDropdown>\n                        ): (\n                            <>\n                                <LinkContainer to=\"/login\">\n                                    <Nav.Link><i className=\"fas fa-user\"></i> LOGIN</Nav.Link>\n                                </LinkContainer>\n                                <LinkContainer to=\"/register\">\n                                    <Nav.Link><i className=\"fas fa-user-plus\"></i> REGISTER</Nav.Link>\n                                </LinkContainer>\n                            </>\n                        )}\n\n                        {user && user.isAdmin && (\n                            <NavDropdown title={<span><i className=\"fas fa-user-cog\"></i> ADMIN</span>} id=\"admin-menu\">\n                                <LinkContainer to=\"/admin/users\">\n                                    <NavDropdown.Item><i className=\"fas fa-users\"></i> USERS</NavDropdown.Item>\n                                </LinkContainer>\n                                <LinkContainer to=\"/admin/products\">\n                                    <NavDropdown.Item><i className=\"fab fa-product-hunt\"></i> PRODUCTS</NavDropdown.Item>\n                                </LinkContainer>\n                                <LinkContainer to=\"/admin/orders\">\n                                    <NavDropdown.Item><i className=\"fas fa-cart-arrow-down\"></i> ORDERS</NavDropdown.Item>\n                                </LinkContainer>\n                            </NavDropdown>\n                        )}\n                    </Nav>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    )\n}\n\nexport default Header\n","import React from 'react'\n\n//import styles\nimport '../styles/components/Rating.css'\n\nfunction Rating({ value, text, color }) {\n    const renderStars = () => {\n        let stars = []\n        let starCounter = value\n        for (let i=1; i<=5; i++) {\n            if (starCounter <= 0 ) {\n                stars.push(<i key={i} style={{ color }} className=\"far fa-star\"></i>)\n            } else if (starCounter <= 0.5){\n                stars.push(<i key={i} style={{ color }} className=\"fas fa-star-half-alt\"></i>)\n            } else {\n                stars.push(<i key={i} style={{ color }} className=\"fas fa-star\"></i>)\n            }\n            starCounter -= 1\n        }\n        return stars\n    }\n    return (\n        <div className='rating'>\n            <span>\n                {\n                    renderStars()\n                }\n            </span>\n            {text && <small className=\"text-muted\">  ({text})</small>}\n        </div>\n    )\n\n}\n\nexport default Rating\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\n//import local components\nimport Rating from './Rating'\n\n//import third-party components and libraries\nimport { Card } from 'react-bootstrap'\n\n//import styles\nimport '../styles/components/Product.css'\n\nfunction Product({ product }) {\n    return (\n        <Card className=\"product p-3\">\n            <Link to={`/products/${product._id}`}>\n                <Card.Img className=\"product__img\" src={product.image} variant=\"top\" />\n            </Link>\n            <Card.Body className=\"p-0 mt-2\">\n                <Link to={`/products/${product._id}`}>\n                    <Card.Title>\n                        <strong>{(product.name)?.slice(0,25)}</strong>\n                        <small><Rating value={product.rating} text={`${product.numReviews} reviews`} color={\"#f8e825\"} /></small>\n                    </Card.Title>\n                </Link>\n                <Card.Text className=\"my-2\">\n                    <strong>${product.price}</strong>\n                </Card.Text>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default Product\n","import React from 'react'\n\nimport { Spinner } from 'react-bootstrap'\n\nfunction Loading({ height, width }) {\n    return (\n        <Spinner animation='grow' role='status' style={{\n            height: {height}, \n            width: {width},\n            margin: 'auto',\n            display: 'block'\n        }}>\n            <span className='sr-only'>Loading...</span>\n        </Spinner>\n    )\n}\n\nexport default Loading\n","import React from 'react'\n\nimport { Alert } from 'react-bootstrap'\n\nfunction Message({ type, children }) {\n    return (\n        <Alert variant={type} style={{padding: '10px'}}>\n            {children}\n        </Alert>\n    )\n}\n\nexport default Message\n","import React from 'react'\n\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction Paginator({ numPages, page, keyword='', isAdmin=false }) {\n    if (keyword) {\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\n    }\n    return (\n        numPages > 1 && \n            (<Pagination>\n                {[...Array(numPages).keys()].map((x) => (\n                    <LinkContainer \n                        key={x+1} \n                        to={!isAdmin ? `/?keyword=${keyword}&page=${x+1}` : `/admin/products/?keyword=${keyword}&page=${x+1}`}\n                    >\n                        <Pagination.Item active={(x+1) === page}>{x+1}</Pagination.Item>\n                    </LinkContainer>\n                ))}\n            </Pagination>)\n    )\n}\n\nexport default Paginator\n","import React from 'react'\n\nimport { Carousel, Image } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nfunction ProductCarousel({ products }) {\n    return (\n        <Carousel pause=\"hover\" fade={true} className=\"bg-info\">\n            {products?.map((product, i) => (\n                <Carousel.Item key={i} className=\"text-center\">\n                    <Link to={`/products/${product._id}`}>\n                        <Carousel.Caption className=\"text-primary\" style={{position: 'absolute', bottom: '0'}}>\n                            <h5 style={{fontSize:\"2.3vh\"}}><strong>{product.name} (${product.price})</strong></h5>\n                        </Carousel.Caption>\n                        <Image fluid roundedCircle\n                            className=\"p-3\"\n                            style={{\n                                objectFit:\"cover\",\n                                objectPosition: \"top center\",\n                                height: \"40vh\",\n                                width: \"40vh\",\n                            }}\n                            src={product.image}\n                            alt={product.name}\n                        />\n                    </Link>\n                </Carousel.Item>\n            ))}\n        </Carousel>\n    )\n}\n\nexport default ProductCarousel\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_TOP_LIST_REQUEST = 'PRODUCT_TOP_LIST_REQUEST'\nexport const PRODUCT_TOP_LIST_SUCCESS = 'PRODUCT_TOP_LIST_SUCCESS'\nexport const PRODUCT_TOP_LIST_FAIL = 'PRODUCT_TOP_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\nexport const PRODUCT_DELETE_RESET = 'PRODUCT_DELETE_RESET'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\nexport const PRODUCT_IMAGE_UPLOAD_REQUEST = 'PRODUCT_IMAGE_UPLOAD_REQUEST'\nexport const PRODUCT_IMAGE_UPLOAD_SUCCESS = 'PRODUCT_IMAGE_UPLOAD_SUCCESS'\nexport const PRODUCT_IMAGE_UPLOAD_FAIL = 'PRODUCT_IMAGE_UPLOAD_FAIL'\n\nexport const PRODUCT_REVIEW_CREATE_REQUEST = 'PRODUCT_REVIEW_CREATE_REQUEST'\nexport const PRODUCT_REVIEW_CREATE_SUCCESS = 'PRODUCT_REVIEW_CREATE_SUCCESS'\nexport const PRODUCT_REVIEW_CREATE_FAIL = 'PRODUCT_REVIEW_CREATE_FAIL'\nexport const PRODUCT_REVIEW_CREATE_RESET = 'PRODUCT_REVIEW_CREATE_RESET'\n","import axios from 'axios'\n\nimport { \n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_TOP_LIST_SUCCESS,\n    PRODUCT_TOP_LIST_REQUEST,\n    PRODUCT_TOP_LIST_FAIL,\n\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n\n    PRODUCT_IMAGE_UPLOAD_REQUEST,\n    PRODUCT_IMAGE_UPLOAD_SUCCESS,\n    PRODUCT_IMAGE_UPLOAD_FAIL,\n\n    PRODUCT_REVIEW_CREATE_REQUEST,\n    PRODUCT_REVIEW_CREATE_SUCCESS,\n    PRODUCT_REVIEW_CREATE_FAIL,\n\n } from '../constants/productConstants'\n\nexport const listProducts = (keyword='') => async (dispatch, getState) =>  {\n    try {\n        dispatch({\n            type: PRODUCT_LIST_REQUEST\n        })\n        const { userLogin: { user } } = getState()\n        var config = {}\n        if (user) {\n            config = {\n                headers: {\n                    'Authorization': `Bearer ${user.token}`\n                }\n            }\n        } \n        const { data } = await axios.get(`/api/products${keyword}`, config)\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data,\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n }\n\n export const productsTopListAction = () => async (dispatch) =>  {\n    try {\n        dispatch({\n            type: PRODUCT_TOP_LIST_REQUEST\n        })\n\n        const { data } = await axios.get('/api/products/top-rated/')\n        dispatch({\n            type: PRODUCT_TOP_LIST_SUCCESS,\n            payload: data,\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_LIST_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n }\n\n export const displayProduct = (id) => async (dispatch) => {\n     try {\n        dispatch({\n            type: PRODUCT_DETAILS_REQUEST\n        })\n        const { data } = await axios.get(`/api/products/${id}/`)\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n     } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n     }\n }\n\n export const productDeleteAction = (id) => async (dispatch, getState) => {\n     try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        const { userLogin: { user } } = getState()\n        const config = {\n            'headers': {\n                'Authorization': `Bearer ${user.token}`\n            }\n        }\n\n        const { data } = await axios.delete(`/api/products/delete/${id}/`, config)\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n            payload: data.detail\n        })\n\n     } catch(error) {\n         dispatch ({\n             type: PRODUCT_DELETE_FAIL,\n             payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n         })\n     }\n }\n\n export const productCreateAction = () => async (dispatch, getState) => {\n     try {\n         dispatch({\n             type: PRODUCT_CREATE_REQUEST\n         })\n\n         const { userLogin: { user } } = getState()\n         const config = {\n             'Content-Type': 'application/json',\n             'headers': {\n                 'Authorization': `Bearer ${user.token}`\n             }\n         }\n\n         const { data } = await axios.post('/api/products/create/', {}, config)\n         dispatch({\n             type: PRODUCT_CREATE_SUCCESS,\n             payload: data\n         })\n\n     } catch(error) {\n        dispatch ({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n     }\n }\n\n export const productUpdateAction = (id, productData) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        const { userLogin: { user } } = getState()\n        const config = {\n            'Content-Type': 'application/json',\n            'headers': {\n                'Authorization': `Bearer ${user.token}`\n            }\n        }\n\n        const { data } = await axios.put(`/api/products/update/${id}/`, productData, config)\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n        })\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n       dispatch ({\n           type: PRODUCT_UPDATE_FAIL,\n           payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n       })\n    }\n}\n\nexport const productImageUploadAction = (formData) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_IMAGE_UPLOAD_REQUEST\n        })\n\n        const { userLogin: { user } } = getState()\n        const config = {\n            'Content-Type': \"multipart/form-data\",\n            'headers': {\n                'Authorization': `Bearer ${user.token}`\n            }\n        }\n        \n        await axios.post('/api/products/upload-image/', formData, config)\n\n        dispatch({ type: PRODUCT_IMAGE_UPLOAD_SUCCESS })\n        \n    } catch(error) {\n        dispatch ({\n            type: PRODUCT_IMAGE_UPLOAD_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\nexport const productReviewCreateAction = (reviewData) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_REVIEW_CREATE_REQUEST\n        })\n\n        const { userLogin: { user } } = getState()\n        const { productDetails: { product } } = getState()\n\n        const config = {\n            'headers': {\n                'Authorization': `Bearer ${user.token}` \n            }\n        }\n\n        const { data } = await axios.post(`/api/products/${product._id}/reviews/create/`, reviewData, config)\n\n        dispatch({\n            type: PRODUCT_REVIEW_CREATE_SUCCESS,\n            payload: data.detail\n        })\n\n        dispatch(displayProduct(product._id))\n    } catch(error) {\n        dispatch ({\n            type: PRODUCT_REVIEW_CREATE_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}  ","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\n//import local components\nimport Product from '../components/Product'\nimport Loading from '../components/Loading'\nimport Message from '../components/Message'\nimport Paginator from '../components/Paginator'\nimport ProductCarousel from '../components/ProductCarousel'\nimport { listProducts, productsTopListAction } from '../actions/productActions'\n\n//import third-party components and libraries\nimport { Row, Col } from 'react-bootstrap'\n\nfunction HomeScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n    const { error, loading, products, page, numPages } = productList\n\n    const topProductsList = useSelector(state => state.topProducts)\n    const { loading: loadingTopProducts, products: topProducts } = topProductsList\n\n    let keyword = history.location.search\n    useEffect(() => {\n        dispatch(listProducts(keyword))\n        dispatch(productsTopListAction())\n    }, [dispatch, keyword])\n\n    return (\n        <div>\n            {!keyword && \n                <div className=\"mb-3\">\n                    {loadingTopProducts ? <Loading /> : (\n                        <ProductCarousel products={topProducts} /> \n                    )}\n                </div>\n            }\n            <h4>LATEST ARRIVALS</h4>\n            <hr></hr>\n            {loading ? <Loading height={'500px'} width={'500px'} />\n                : error ? <Message type=\"danger\">{error}</Message>\n                : <div>\n                    <Row>\n                        {products.map(product => (\n                            <Col key={product._id} xs={6} md={4} lg={4} xl={3}>\n                                <Product product={product}/>\n                            </Col>\n                        ))}\n                    </Row>\n                    <Paginator numPages={numPages} page={page} keyword={keyword} />\n                </div>\n            }   \n        </div>\n    )\n}\n\nexport default HomeScreen\n","import React from 'react'\nimport Rating from './Rating'\n\nfunction Review({ name, rating, comment, date }) {\n    return (\n        <div className='review'>\n            <strong>{name}</strong>\n            <Rating value={rating} color=\"#f8e825\" />\n            <small className=\"text-muted\">{date}</small>\n            <br></br>\n            <p className=\"lead\"><small>{comment}</small></p>\n        </div>\n    )\n}\n\nexport default Review\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\n//import local components\nimport Rating from '../components/Rating'\nimport Loading from '../components/Loading'\nimport Message from '../components/Message'\nimport Review from '../components/Review'\nimport { displayProduct, productReviewCreateAction } from '../actions/productActions'\nimport { PRODUCT_REVIEW_CREATE_RESET } from '../constants/productConstants'\n\n//import third-party library and components\nimport { Row, Col, Button, Image, ListGroup, Card, Form } from 'react-bootstrap'\n\n//import styles\nimport '../styles/screens/ProductScreen.css'\n\nfunction ProductScreen({ match, history }) {\n    const [qty, setQty] = useState(1)\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState('')\n    const dispatch = useDispatch()\n    \n    const currentProduct = useSelector(state => state.productDetails)\n    const { error, loading, product } = currentProduct\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { user } = userLogin\n\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\n    const { loading: loadingReview, message: messageReview, error: errorReview } = productReviewCreate\n\n    useEffect(() => {\n        dispatch(displayProduct(match.params.id))\n    }, [dispatch, match])\n\n    useEffect(() => {\n        if (messageReview || errorReview) {\n            setTimeout(() => dispatch({type: PRODUCT_REVIEW_CREATE_RESET}), 5000)\n        }\n    }, [messageReview, errorReview, dispatch])\n            \n    const addToCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        const reviewData = {\n            rating: rating,\n            comment: comment\n        }\n        dispatch(productReviewCreateAction(reviewData))\n        setRating(0)\n        setComment('')\n    }\n\n    return (\n        <div className=\"product__container\">\n            <Link to=\"/\" className=\"btn btn-outline-info btn-sm mb-3\"> {\"<<< Go Back\"}</Link>\n            {loading ? <Loading height={'500px'} width={'500px'} />\n                : error ? <Message type=\"danger\">{error}</Message>\n                : (\n                    <div>\n                        <Row className=\"justify-content-md-center\">\n                            <Col lg={5} md={8} className=\"mb-md-3\">\n                                <Image src={product.image} alt={product.name} fluid />\n                            </Col>\n                            <Col lg={4} md={6}>\n                                <ListGroup className=\"product__details\" variant=\"flush\">\n                                    <ListGroup.Item>\n                                        <h4>{product.name}</h4>\n                                    </ListGroup.Item>\n                                    <ListGroup.Item>\n                                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={\"#f8e825\"} />\n                                    </ListGroup.Item>\n                                    <ListGroup.Item>\n                                        Price: $<strong>{product.price}</strong>\n                                    </ListGroup.Item>\n                                    <ListGroup.Item style={{textAlign: 'justify', textJustify: 'inter-word'}}>\n                                        {product.description}\n                                    </ListGroup.Item>\n                                </ListGroup>\n                            </Col>\n                            <Col lg={3} md={6}>\n                                <Card>\n                                    <ListGroup variant=\"flush\">\n                                        <ListGroup.Item>\n                                            <Row>\n                                                <Col>Price:</Col>\n                                                <Col>$<strong>{product.price}</strong></Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                        <ListGroup.Item>\n                                            <Row>\n                                                <Col>Status:</Col>\n                                                <Col>{product.countInStock !== 0 ? \"In Stock\" : \"Out of Stock\"}</Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                        {product.countInStock > 0 &&\n                                            (\n                                                <ListGroup.Item>\n                                                    <Row>\n                                                        <Col>Qty:</Col>\n                                                        <Col>\n                                                            <Form.Control as=\"select\" value={qty} onChange={e => setQty(e.target.value)}>\n                                                                {[...Array(product.countInStock).keys()].map((i) => (\n                                                                    <option key={i+1} value={i+1}>{i+1}</option>    \n                                                                ))}\n                                                            </Form.Control>\n                                                        </Col>\n                                                    </Row>\n                                                </ListGroup.Item>\n                                            )\n                                        }\n                                        <ListGroup.Item>\n                                        <Button variant=\"success\" size=\"md\" block disabled={product.countInStock === 0} onClick={addToCartHandler}>Add to Cart</Button>\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Card>\n                            </Col>\n                        </Row>\n                        <Row className=\"pt-3\">\n                            <Col xs={12} lg={9}>\n                                <div>\n                                    <h5>Reviews</h5>\n                                    <hr></hr>\n                                    {product.reviews.length === 0 && <Message type=\"warning\">No reviews yet.</Message>}\n                                    {product.reviews.map((review, i) => (\n                                        <div key={i}>\n                                            <Review \n                                                name={review.name}\n                                                rating={review.rating}\n                                                comment={review.comment}\n                                                date={new Date(review.createdAt).toLocaleString('en-gb', {dateStyle:'medium', timeStyle: 'medium', hourCycle: 'h12'})}\n                                            />\n                                            <hr></hr>\n                                        </div>\n                                    ))}\n                                </div>\n                                {user ? (\n                                    <div>\n                                        <h5>Write a review</h5>\n                                        {messageReview && <Message type=\"success\">{messageReview}</Message>}\n                                        {errorReview && <Message type=\"danger\">{errorReview}</Message>}\n                                        {!loadingReview ? (\n                                            <Form onSubmit={submitHandler}>\n                                            <Form.Group controlId=\"rating\">\n                                                <Form.Label>Rating</Form.Label>\n                                                <Form.Control as=\"select\" value={rating} onChange={e => setRating(e.target.value)}>\n                                                    <option value={0}>Please choose a rating</option>\n                                                    <option value={5}>5 - Excellent</option>\n                                                    <option value={4}>4 - Good</option>\n                                                    <option value={3}>3 - Satisfactory</option>\n                                                    <option value={2}>2 - Bad</option>\n                                                    <option value={1}>1 - Very Bad</option>\n                                                </Form.Control>\n                                            </Form.Group>\n                                            <Form.Group>\n                                                <Form.Label>Comment</Form.Label>\n                                                <Form.Control as=\"textarea\" rows={3} onChange={e => setComment(e.target.value)} />\n                                            </Form.Group>\n                                            <Button type=\"submit\" variant=\"success\" disabled={!Number(rating) || loadingReview}>Submit</Button>\n                                        </Form>\n                                        ) : <Loading />}\n                                    </div>\n                                    ) : null}\n                            </Col>\n                        </Row>\n                    </div>\n                )}\n        </div>\n    )\n}\n\nexport default ProductScreen\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\nexport const CART_RESET = 'CART_RESET'","import axios from 'axios'\n\nimport {\n    CART_ADD_ITEM,\n    CART_REMOVE_ITEM,\n    CART_RESET,\n    CART_SAVE_PAYMENT_METHOD,\n    CART_SAVE_SHIPPING_ADDRESS,\n} from '../constants/cartConstants'\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n    const { data } = await axios.get(`/api/products/${id}`)\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n            product: data._id,\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            numReviews: data.numReviews, \n            qty,\n            totalPrice: qty*data.price,\n        }\n    })\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload: id\n    })\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_SHIPPING_ADDRESS,\n        payload: data\n    })\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_PAYMENT_METHOD,\n        payload: data\n    })\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\n}\n\nexport const resetCart = () => (dispatch) => {\n    dispatch({\n        type: CART_RESET\n    })\n    localStorage.removeItem('cartItems')\n    localStorage.removeItem('paymentMethod')\n    localStorage.removeItem('shippingAddress')\n}\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// import local components\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\n// import third-party libraries and components\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\n\n//import styles\nimport '../styles/screens/CartScreen.css'\n\nfunction CartScreen({ match, location, history }) {\n    const productId = match.params.id\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n\n    const dispatch = useDispatch()\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n\n    useEffect(() => {\n        if (productId) {\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty])\n\n    const setQty = (productId, qty) => {\n        dispatch(addToCart(productId, Number(qty)))\n    }\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    return (\n        <Row>\n            <Col md={8}>\n                <h4>CART</h4>\n                <hr></hr>\n                { \n                    cartItems?.length === 0 ? \n                        <Message type=\"info\">Your cart is empty. <Link to='/'><Button variant=\"danger\" size=\"sm\">{`<<< Go Back`}</Button></Link></Message>\n                        : (\n                            <ListGroup variant=\"flush\">\n                                {\n                                    cartItems?.map(cartItem => (\n                                        <ListGroup.Item key={cartItem.product}>\n                                            <Row>\n                                                <Col md={2}>\n                                                    <Image src={cartItem.image} alt={cartItem.name} fluid rounded />\n                                                </Col>\n                                                <Col md={3}>\n                                                    <Link to={`/products/${cartItem.product}`}>{cartItem.name}</Link>\n                                                </Col>\n                                                <Col md={2}>\n                                                    $<strong>{cartItem.price}</strong>\n                                                </Col>\n                                                <Col md={2}>\n                                                    <Form.Control size=\"sm\" as=\"select\" value={cartItem.qty} title=\"Quantity\" onChange={e => setQty(cartItem.product, e.target.value)}>\n                                                        {[...Array(cartItem.countInStock).keys()].map((i) => (\n                                                            <option key={i+1} value={i+1}>{i+1}</option>    \n                                                        ))}\n                                                    </Form.Control>\n                                                </Col>\n                                                <Col md={2}>\n                                                    <Button type=\"button\" variant=\"danger\" size=\"sm\" title=\"Remove from Cart\" onClick={() => removeFromCartHandler(cartItem.product)}><i className=\"fa fa-trash-alt fa-sm\"></i></Button>\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))\n                                }\n                            </ListGroup>\n                        )\n                }\n            </Col>\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h4>Subtotal ({cartItems.reduce((acc, cartItem) => acc + cartItem.qty, 0)}) items</h4>\n                            $<strong>{(cartItems.reduce((acc, cartItem) => acc+cartItem.totalPrice, 0)).toFixed(2)}</strong>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Button type=\"button\" variant=\"success\" block disabled={cartItems?.length === 0} onClick={checkoutHandler}>Proceed to Checkout</Button>\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default CartScreen\n","import React from 'react'\n\n//import local components\n\n//import third-party components and libraries\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction FormContainer({ children }) {\n    return (\n        <Container>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React, {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom'\n\n// import local components\nimport Loading from '../components/Loading'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { userLogin } from '../actions/userActions'\n\n//import third-party components and libraries\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\n\nfunction LoginScreen({ history, location }) {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [errorMessage, setErrorMessage] = useState('')\n    const [infoMessage, setInfoMessage] = useState('')\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n    \n    const currentUser = useSelector(state => state.userLogin)\n    const { loggingIn, user, error } = currentUser\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(userLogin(email, password))\n        setErrorMessage('')\n        setInfoMessage('')\n    }\n\n    useEffect(() => {\n        setInfoMessage('')\n        setErrorMessage(error)\n    }, [error])\n\n    useEffect(() => {\n        if(redirect === '/shipping'){\n            setErrorMessage('')\n            setInfoMessage(\"Please Login to start shopping.\")\n        }\n    }, [redirect])\n\n    useEffect(() => {\n        if (user) {\n            history.push(redirect)\n        }\n    },[history, user, redirect])\n\n    return (\n        <FormContainer>\n        {loggingIn ? <Loading width=\"500px\" height=\"500px\" /> : (\n            <div>\n                {error && <Message type=\"danger\">{errorMessage}</Message>}\n                {infoMessage && <Message type=\"warning\">{infoMessage}</Message> }\n                <h3>Sign-In</h3>\n                <hr></hr>\n                <Form onSubmit={e => submitHandler(e)}>\n                    <Form.Group controlId=\"email\">\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control\n                            type=\"email\"\n                            placeholder=\"Enter email...\"\n                            value={email}\n                            onChange={e => setEmail(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"password\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            type=\"password\"\n                            placeholder=\"Enter password...\"\n                            value={password}\n                            onChange={e => setPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n                    <Button type=\"submit\" variant=\"success\" block>Sign In</Button>\n                </Form>\n                <Row className=\"py-3\">\n                    <Col>\n                        Don't have and account?  <Link\n                                                    to={redirect ? `/register?redirect=${redirect}` : '/register'}\n                                                 >\n                                                    Register\n                                                </Link>\n                    </Col>\n                </Row>\n            </div>\n        )}\n        </FormContainer>\n\n    )\n}\n\nexport default LoginScreen\n","import React, {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom'\n\n// import local components\nimport Loading from '../components/Loading'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { userRegister } from '../actions/userActions'\n\n//import third-party components and libraries\nimport { Form, Button, Row, Col, FormControl } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\n\nfunction RegisterScreen({ history, location }) {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [passwordError, setPasswordError] = useState(null)\n\n    const registeredUser = useSelector(state => state.userRegister)\n    const { registering, user, error } = registeredUser\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n    \n    const dispatch = useDispatch()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (!passwordError) {\n            dispatch(userRegister(email, name, password))\n        } \n    }\n\n    useEffect(() => {\n        if (user) {\n            history.push(redirect)\n        }\n    },[history, user, redirect])\n\n    useEffect(() => {\n        if (password !== confirmPassword){\n            setPasswordError('Your password and confirm password do not match.')\n        }\n        else {\n            setPasswordError(null)\n        }\n    }, [confirmPassword, password])\n\n    return (\n        <FormContainer>\n        {registering ? <Loading width=\"500px\" height=\"500px\" /> : (\n            <div>\n                {error && <Message type=\"danger\">{error}</Message>}\n                <h3>Register</h3>\n                <hr></hr>\n                <Form onSubmit={e => submitHandler(e)}>\n                    <Form.Group controlId=\"email\">\n                        <Form.Label>Full Name</Form.Label>\n                        <Form.Control\n                            required\n                            type=\"text\"\n                            placeholder=\"Enter full name...\"\n                            value={name}\n                            onChange={e => setName(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"email\">\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control\n                            required\n                            type=\"email\"\n                            placeholder=\"Enter email...\"\n                            value={email}\n                            onChange={e => setEmail(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"password\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            required\n                            type=\"password\"\n                            placeholder=\"Enter password...\"\n                            value={password}\n                            onChange={e => setPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"confirmPassword\">\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n                            required\n                            type=\"password\"\n                            placeholder=\"Enter password once again...\"\n                            value={confirmPassword}\n                            onChange={e => setConfirmPassword(e.target.value)}\n                            isInvalid={Boolean(passwordError)}\n                        >\n                        </Form.Control>\n                        <FormControl.Feedback type=\"invalid\">\n                            {passwordError}\n                        </FormControl.Feedback>\n                    </Form.Group>\n                    <Button type=\"submit\" variant=\"success\" block>Create Account</Button>\n                </Form>\n                <Row className=\"py-3\">\n                    <Col>\n                        Already have an account?  <Link\n                                                    to={redirect ? `/login?redirect=${redirect}` : '/login'}\n                                                 >\n                                                    Sign In\n                                                </Link>\n                    </Col>\n                </Row>\n            </div>\n        )}\n        </FormContainer>\n    )\n}\n\nexport default RegisterScreen\n","import React, {useState, useEffect} from 'react'\n\n// import local components\nimport Loading from '../components/Loading'\nimport Message from '../components/Message'\nimport { getUserProfile, updateUserProfile, userUpdateProfileReset } from '../actions/userActions'\nimport { orderUserListAction } from '../actions/orderActions'\n\n//import third-party components and libraries\nimport { Form, Button, Row, Col, FormControl, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\n\nfunction ProfileScreen({ history }) {\n    const passwordErrorMessage = \"Your password and confirm password do not match.\"\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [passwordError, setPasswordError] = useState('')\n    const [message, setMessage] = useState('')\n\n    const userProfile = useSelector(state => state.userProfile)\n    const updatedUserProfile = useSelector(state => state.updateUserProfile)\n    const { orders, loading: loadingOrders, error: errorOrders } = useSelector(state => state.userOrders)\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { loading, userInfo, error } = userProfile\n    const { user } = userLogin \n    const { success } = updatedUserProfile\n    \n    const dispatch = useDispatch()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (password !== confirmPassword) {\n            setMessage(passwordErrorMessage)\n        } else {\n            dispatch(updateUserProfile({\n                id: user._id,\n                name: name, \n                email: email, \n                password: password\n            }))\n            setMessage('')\n        }\n    }\n\n    useEffect(() => {\n        if (!user) {\n            history.push('/login?redirect=/profile')\n        } else {\n            dispatch(orderUserListAction())\n            if (!userInfo || !userInfo.name || success || userInfo._id !== user._id) {\n                dispatch(userUpdateProfileReset())\n                dispatch(getUserProfile('profile'))\n            } else {\n                setName(userInfo.name)\n                setEmail(userInfo.email)\n            }\n        }\n    },[history, user, userInfo, dispatch, success])\n\n    useEffect(() => {\n        if (password !== confirmPassword){\n            setPasswordError(passwordErrorMessage)\n        }\n        else {\n            setPasswordError(null)\n        }\n    }, [confirmPassword, password])\n\n    return (\n        <Row>\n            <Col md={3}>\n                <h3>Profile</h3>\n                <hr></hr>\n                {message && <Message type=\"danger\">{message}</Message>}\n                {error && <Message type=\"danger\">{error}</Message>}\n                {loading ? <Loading width=\"500px\" height=\"500px\" /> :\n                    (<Form onSubmit={e => submitHandler(e)}>\n                        <Form.Group controlId=\"email\">\n                            <Form.Label>Full Name</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"Enter full name...\"\n                                value={name}\n                                onChange={e => setName(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"email\"\n                                placeholder=\"Enter email...\"\n                                value={email}\n                                onChange={e => setEmail(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                placeholder=\"Enter password...\"\n                                value={password}\n                                onChange={e => setPassword(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"confirmPassword\">\n                            <Form.Label>Confirm Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                placeholder=\"Enter password once again...\"\n                                value={confirmPassword}\n                                onChange={e => setConfirmPassword(e.target.value)}\n                                isInvalid={Boolean(passwordError)}\n                            >\n                            </Form.Control>\n                            <FormControl.Feedback type=\"invalid\">\n                                {passwordError}\n                            </FormControl.Feedback>\n                        </Form.Group>\n                        <Button type=\"submit\" variant=\"success\" block>Update Profile</Button>\n                    </Form>\n                    )\n                }\n                \n            </Col>\n            <Col md={9}>\n                <h3>Order History</h3>\n                {errorOrders && <Message type=\"danger\">{errorOrders}</Message>}\n                {loadingOrders ? <Loading /> : \n                    (\n                        <Table striped bordered hover>\n                            <thead>\n                                <tr>\n                                    <th>Order #</th>\n                                    <th>Date</th>\n                                    <th>Total</th>\n                                    <th>Paid</th>\n                                    <th>Delivered</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {orders.map((order, i) => (\n                                    <tr key={i}>\n                                        <td>{order._id}</td>\n                                        <td>{(new Date(order.createdAt)).toLocaleString()}</td>\n                                        <td>${order.totalPrice}</td>\n                                        <td>\n                                            {order.isPaid ? \n                                                <span className=\"text-success\"><i className=\"far fa-check-circle\"></i> Yes</span> : \n                                                <span className=\"text-warning\"><i className=\"far fa-times-circle\"></i> No</span>}\n                                        </td>\n                                        <td>\n                                            {order.isDelivered ? \n                                                <span className=\"text-success\"><i className=\"far fa-check-circle\"></i> Yes</span> : \n                                                <span className=\"text-warning\"><i className=\"far fa-times-circle\"></i> No</span>}\n                                        </td>\n                                        <td className=\"text-center\">\n                                            <LinkContainer to={`order/${order._id}`}>\n                                                <Button className=\"btn-sm\" variant=\"info\">Details</Button>\n                                            </LinkContainer>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                            \n                        </Table>\n                    )\n                }\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen\n","import { \n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n\n    ORDER_LIST_USER_REQUEST,\n    ORDER_LIST_USER_SUCCESS,\n    ORDER_LIST_USER_FAIL,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n\n } from '../constants/orderConstants'\n\nimport axios from 'axios'\n\n export const orderCreateAction = (orderData) => async(dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n        const { userLogin: { user } } = getState()\n        console.log(user)\n        const config = {\n            'Content-Type': 'application/json',\n            headers: {\n                'Authorization': `Bearer ${user.token}`\n            }\n        }\n        const { data } = await axios.post('/api/orders/add/', orderData, config)\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n\n        })\n    }\n }\n\n export const orderDetailsAction = (id) => async (dispatch, getState) => {\n     try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const { userLogin: { user } } = getState()\n\n        const config = {\n            'Content-Type': 'application/json',\n            headers: {\n                'Authorization': `Bearer ${user.token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/orders/${id}/`, config)\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n     } catch(error) {\n         dispatch({\n             type: ORDER_DETAILS_FAIL,\n             payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n         })\n     }\n}\n\nexport const orderPayAction = (id, paymentResult) => async(dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n        \n        const { userLogin: { user } } = getState()\n\n        const config = {\n            'Content-Type': 'application/json',\n            'headers': {\n                'Authorization': `Bearer ${user.token}`\n            }\n        }\n\n        const { data } = axios.put(`/api/orders/${id}/pay/`, paymentResult, config)\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\nexport const orderUserListAction = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_USER_REQUEST\n        })\n\n        const { userLogin: { user } } = getState()\n        const config = {\n            'headers': {\n                'Authorization': `Bearer ${user.token}`\n            }\n        }\n        const { data } = await axios.get('/api/orders/my-orders/', config)\n        dispatch({\n            type: ORDER_LIST_USER_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n        dispatch({\n            type: ORDER_LIST_USER_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\nexport const orderListAction = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const { userLogin: { user } } = getState()\n\n        const config = {\n            'headers': {\n                'Authorization': `Bearer ${user.token}`\n            }\n        }\n\n        const { data } = await axios.get('/api/orders/', config)\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\nexport const orderDeliverAction = (id) => async(dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n        \n        const { userLogin: { user } } = getState()\n        const config = {\n            'Content-Type': 'application/json',\n            'headers': {\n                'Authorization': `Bearer ${user.token}`\n            }\n        }\n\n        await axios.put(`/api/orders/${id}/deliver/`, {}, config)\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n        })\n\n    } catch(error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\n    return (\n        <Nav className=\"justify-content-center mb-4\">\n            <Nav.Item>\n                {step1 ? (\n                    <LinkContainer to=\"/login\">\n                        <Nav.Link>Login</Nav.Link>\n                    </LinkContainer>\n                ): (\n                    <Nav.Link disabled>Login</Nav.Link>\n                )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step2 ? (\n                    <LinkContainer to=\"/shipping\">\n                        <Nav.Link>Shipping</Nav.Link>\n                    </LinkContainer>\n                ): (\n                    <Nav.Link disabled>Shipping</Nav.Link>\n                )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step3 ? (\n                    <LinkContainer to=\"/payment\">\n                        <Nav.Link>Payment</Nav.Link>\n                    </LinkContainer>\n                ): (\n                    <Nav.Link disabled>Paymennt</Nav.Link>\n                )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step4 ? (\n                    <LinkContainer to=\"/placeorder\">\n                        <Nav.Link>Place Order</Nav.Link>\n                    </LinkContainer>\n                ): (\n                    <Nav.Link disabled>Place Order</Nav.Link>\n                )}\n            </Nav.Item>\n        </Nav>\n    )\n}\n\nexport default CheckoutSteps\n","import React, { useState } from 'react'\n\n// import local components\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\n//import third-party components and libraries\nimport { Form, Button, FormGroup, Row, Col } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\n\nfunction ShippingScreen({ history }) {\n    const dispatch = useDispatch()\n    const cart = useSelector(state => state.cart)\n    const { user } = useSelector(state => state.userLogin)\n    const { shippingAddress } = cart\n\n    if(!user){\n        history.push('/login?redirect=/shipping')\n    }\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postCode, setPostCode] = useState(shippingAddress.postCode)\n    const [province, setProvince] = useState(shippingAddress.province)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postCode, province, country }))\n        history.push('/payment')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 /> \n            <hr></hr>\n            <h3>Shipping</h3>\n            <hr></hr>\n            <Form onSubmit={e => submitHandler(e)}>\n                <FormGroup controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter address...'\n                        value={address ? address : ''}\n                        onChange={e => setAddress(e.target.value)}\n                    >\n                    </Form.Control>\n                </FormGroup>\n                <Row>\n                    <FormGroup as={Col} controlId='city'>\n                        <Form.Label>City</Form.Label>\n                        <Form.Control\n                            required\n                            type='text'\n                            placeholder='Enter city...'\n                            value={city ? city : ''}\n                            onChange={e => setCity(e.target.value)}\n                        >\n                        </Form.Control>\n                    </FormGroup>\n\n                    <FormGroup as={Col} controlId='postCode'>\n                        <Form.Label>Post Code</Form.Label>\n                        <Form.Control\n                            required\n                            type='text'\n                            placeholder='Enter post code...'\n                            value={postCode ? postCode : ''}\n                            onChange={e => setPostCode(e.target.value)}\n                        >\n                        </Form.Control>\n                    </FormGroup>\n                </Row>\n                <Row>\n                    <FormGroup as={Col} controlId='province'>\n                        <Form.Label>State</Form.Label>\n                        <Form.Control\n                            required\n                            type='text'\n                            placeholder='Enter state...'\n                            value={province ? province : ''}\n                            onChange={e => setProvince(e.target.value)}\n                        >\n                        </Form.Control>\n                    </FormGroup>\n\n                    <FormGroup as={Col} controlId='country'>\n                        <Form.Label>Country</Form.Label>\n                        <Form.Control\n                            required\n                            type='text'\n                            placeholder='Enter country...'\n                            value={country ? country : ''}\n                            onChange={e => setCountry(e.target.value)}\n                        >\n                        </Form.Control>\n                    </FormGroup>\n                </Row>\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// import local components\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\n//import third-party components and libraries\nimport { Form, Button, Col } from 'react-bootstrap'\n\nfunction PaymentScreen({ history }) {\n    const dispatch = useDispatch()\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    if (!shippingAddress.address) {\n        history.push('/shipping')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n            <hr></hr>\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as=\"legend\">Select Method</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type=\"radio\"\n                            label=\"Paypal or Credit Card\"\n                            id=\"paypal\"\n                            name=\"paymentMethod\"\n                            checked\n                            onChange={e => setPaymentMethod(e.target.value)}\n                        />\n                    </Col>\n                </Form.Group>\n                <Button type=\"submit\" variant=\"primary\">Continue</Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// import local components\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport Message from '../components/Message'\nimport Loading from '../components/Loading'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\nimport { orderCreateAction } from '../actions/orderActions'\nimport { resetCart } from '../actions/cartActions'\n\n//import third-party components and libraries\nimport { Link } from 'react-router-dom'\nimport { Container, Row, Col, Button, ListGroup, Image, Card } from 'react-bootstrap'\n\nfunction PlaceOrderScreen({ history }) {\n    const dispatch = useDispatch()\n\n    const { order, loading, success, error } = useSelector(state => state.orderCreate)\n\n    const cart = useSelector(state => state.cart)\n    const { address, province, city, postCode } = cart.shippingAddress\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\n    cart.taxPrice = (0.082 * cart.itemsPrice).toFixed(2)\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n    if(!cart.paymentMethod) {\n        history.push('/payment')\n    }\n\n    useEffect(() => {\n        if(success) {\n            dispatch({\n                type: ORDER_CREATE_RESET\n            })\n            dispatch(resetCart())\n            history.push(`order/${order._id}`)\n        }\n    }, [dispatch, success, history, order])\n\n    const placeOrder = () => {\n        const orderData = {\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice\n        }\n        dispatch(orderCreateAction(orderData))\n    }\n\n    return (\n        <Container>\n            {loading ? (\n                <Loading width=\"500px\" height=\"500px\" />\n            ) : (\n                <>\n                    <CheckoutSteps step1 step2 step3 step4 />\n                    <hr></hr>\n                    <Row>\n                        <Col md={8}>\n                            <ListGroup variant=\"flush\">\n                                <ListGroup.Item>\n                                    <h4>Shipping</h4>\n                                    <p>\n                                        <strong>Ship to: </strong>\n                                        {address}, {city}, {province} {postCode}\n                                    </p>\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h4>Payment Method</h4>\n                                    <p>\n                                        <strong>Method: </strong>\n                                        {cart.paymentMethod}\n                                    </p>\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h4>Items in Order</h4>\n                                    {cart.cartItems.length === 0 ? (\n                                        <Message type=\"warning\">\n                                            Your cart is empty\n                                        </Message>\n                                    ): (\n                                        <ListGroup variant=\"flush\">\n                                            {\n                                                cart.cartItems.map((item, i) => (\n                                                    <ListGroup.Item key={i}>\n                                                        <Row className=\"align-items-center\">\n                                                            <Col md={3} className=\"float-left\">\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\n                                                            </Col>\n                                                            <Col md={6}>\n                                                                <Link to={`/products/${item.product}`}>{item.name}</Link>\n                                                            </Col>\n                                                            <Col md={3}>\n                                                                {item.qty} x ${item.price} = <strong>${(item.qty * item.price).toFixed(2)}</strong>\n                                                            </Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n                                                ))\n                                            }\n                                        </ListGroup>\n                                    )}\n                                </ListGroup.Item>\n                            </ListGroup>\n                        </Col>\n\n                        <Col md={4}>\n                            <Card>\n                                <ListGroup variant=\"flush\">\n                                    <ListGroup.Item>\n                                        <h3>Order Summary</h3>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Items Total:</Col>\n                                            <Col>${cart.itemsPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Shipping:</Col>\n                                            <Col>${cart.shippingPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Tax:</Col>\n                                            <Col>${cart.taxPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n                                    \n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col><strong>Total:</strong></Col>\n                                            <Col><strong>${cart.totalPrice}</strong></Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        {error && <Message type=\"danger\">{error}</Message>}\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Button className=\"btn-block\" type=\"button\" variant=\"success\" onClick={placeOrder}>\n                                            Place Order\n                                        </Button>\n                                    </ListGroup.Item>\n\n                                </ListGroup>\n                            </Card>\n                        </Col>\n                    </Row>\n                </>\n            )\n            }\n            \n        </Container>\n    )\n}\n\nexport default PlaceOrderScreen\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// import local components\nimport Message from '../components/Message'\nimport Loading from '../components/Loading'\nimport { orderDetailsAction, orderPayAction, orderDeliverAction } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n//import third-party components and libraries\nimport { Link } from 'react-router-dom'\nimport { Container, Row, Col, Button, ListGroup, Image, Card } from 'react-bootstrap'\nimport { PayPalButton } from \"react-paypal-button-v2\";\n\n// AUpGCAlVA7iM1jGFu8YtBSJzSMcnJg9V9VeIAdJeEPCaWt0WYw_mlEPuXgM1YuzfPExnp0qTd55-kLsg\n\nfunction OrderScreen({ history, match }) {\n    const orderId = match.params.id\n    const dispatch = useDispatch()\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, error, loading } = orderDetails\n    \n    const orderPay = useSelector(state => state.orderPay)\n    const { success: successPay, loading: loadingPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { success: successDeliver, loading: loadingDeliver } = orderDeliver\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { user } = userLogin\n\n    if(order && !loading && !error) {\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc+item.price*item.qty, 0).toFixed(2)\n    }\n\n    const addPayPalScript = () => {\n        const script = document.createElement('script')\n        script.type = \"text/javascript\"\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AUpGCAlVA7iM1jGFu8YtBSJzSMcnJg9V9VeIAdJeEPCaWt0WYw_mlEPuXgM1YuzfPExnp0qTd55-kLsg'\n        script.async = true\n        script.onload = () => {\n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n\n\n    useEffect(() => {\n        if (user) {\n            if(!order || (order._id !== Number(orderId)) || successPay || successDeliver) {\n                dispatch({\n                    type: ORDER_PAY_RESET\n                })\n                dispatch({\n                    type: ORDER_DELIVER_RESET\n                })\n                dispatch(orderDetailsAction(orderId))\n            } else if(!order.isPaid) {\n                if(!window.paypal) {\n                    addPayPalScript()\n                } else {\n                    setSdkReady(true)\n                }\n            }\n        } else {\n            history.push('/login')\n        }\n    }, [order, orderId, successPay, successDeliver, dispatch, user, history])\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(orderPayAction(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(orderDeliverAction(orderId))\n    }\n\n    return (\n        <Container>\n            {error ? <Message type=\"danger\">{error}</Message>\n\n            : loading ? (<Loading height={'500px'} width={'500px'} />) : \n                (\n                    <div>\n                        <h2>Order: #{order._id}</h2>\n                        <hr></hr>\n                        <Row>\n                            <Col md={8}>\n                                <ListGroup variant=\"flush\">\n                                    <ListGroup.Item>\n                                        <h4>Shipping</h4>\n                                        <p><strong>Name: </strong>{order.user.name}</p>\n                                        <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.username}</a></p>\n\n                                        <p>\n                                            <strong>Ship to: </strong>\n                                            {order.shippingAddress.address}, {order.shippingAddress.city}, {order.shippingAddress.province} {order.shippingAddress.postCode}\n                                        </p>\n                                        {order.isDelivered ? (\n                                            <Message type=\"success\">Delivered on: {new Date(order.deliveredAt).toLocaleString('en-gb', {dateStyle:'medium', timeStyle: 'medium', hourCycle: 'h12'})}</Message>\n                                        ) : (\n                                            <Message type=\"warning\">Not Delivered</Message>\n\n                                        )}\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <h4>Payment Method</h4>\n                                        <p>\n                                            <strong>Method: </strong>\n                                            {order.paymentMethod}\n                                        </p>\n                                        {order.isPaid ? (\n                                            <Message type=\"success\">Paid on: {new Date(order.paidAt).toLocaleString('en-gb', {dateStyle:'medium', timeStyle: 'medium', hourCycle: 'h12'})}</Message>\n                                        ) : (\n                                            <Message type=\"warning\">Not Paid</Message>\n\n                                        )}\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <h4>Items in Order</h4>\n                                            <ListGroup variant=\"flush\">\n                                                {\n                                                    order.orderItems.map((item, i) => (\n                                                        <ListGroup.Item key={i}>\n                                                            <Row className=\"align-items-center\">\n                                                                <Col md={3} className=\"float-left\">\n                                                                    <Image src={item.image} alt={item.name} fluid rounded />\n                                                                </Col>\n                                                                <Col md={6}>\n                                                                    <Link to={`/products/${item.product}`}>{item.name}</Link>\n                                                                </Col>\n                                                                <Col md={3}>\n                                                                    {item.qty} x ${item.price} = <strong>${(item.qty * item.price).toFixed(2)}</strong>\n                                                                </Col>\n                                                            </Row>\n                                                        </ListGroup.Item>\n                                                    ))\n                                                }\n                                            </ListGroup>\n                                    </ListGroup.Item>\n                                </ListGroup>\n                            </Col>\n\n                            <Col md={4}>\n                                <Card>\n                                    <ListGroup variant=\"flush\">\n                                        <ListGroup.Item>\n                                            <h3>Order Summary</h3>\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            <Row>\n                                                <Col>Items Total:</Col>\n                                                <Col>${order.itemsPrice}</Col>\n                                            </Row>\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            <Row>\n                                                <Col>Shipping:</Col>\n                                                <Col>${order.shippingPrice}</Col>\n                                            </Row>\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            <Row>\n                                                <Col>Tax:</Col>\n                                                <Col>${order.taxPrice}</Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                        \n                                        <ListGroup.Item>\n                                            <Row>\n                                                <Col><strong>Total:</strong></Col>\n                                                <Col><strong>${order.totalPrice}</strong></Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                        \n                                        {!order.isPaid && (\n                                            <ListGroup.Item>\n                                            \n                                                {!sdkReady ? <Loading /> : \n                                                (\n                                                    <>\n                                                        {loadingPay && <Loading />}\n                                                        <PayPalButton \n                                                            amount={order.totalPrice}\n                                                            onSuccess={successPaymentHandler} \n                                                        />\n                                                    </>\n                                                )}\n                                            </ListGroup.Item>\n                                        )}\n                                        {loadingDeliver && <Loading />}\n                                        {user && user.isAdmin && order.isPaid && !order.isDelivered && (\n                                            <ListGroup.Item>\n                                                <Button className=\"btn-block\" onClick={deliverHandler}>Mark Delivered</Button>\n                                            </ListGroup.Item>\n                                        )}\n\n                                    </ListGroup>\n\n                                </Card>\n                            </Col>\n                        </Row>\n                    </div>\n                )\n            }\n            \n        </Container>\n    )\n}\n\nexport default OrderScreen\n","import React, { useEffect } from 'react'\n\n// import local components\nimport Loading from '../components/Loading'\nimport Message from '../components/Message'\nimport { userListAction, userDeleteAction } from '../actions/userActions'\n\n//import third-party components and libraries\nimport { Table, Button } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { USER_DELETE_RESET } from '../constants/userConstants'\n\nfunction UserListScreen({ history }) {\n    const dispatch = useDispatch()\n    const currentUser = useSelector(state => state.userLogin)\n    const { user } = currentUser\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete, message: messageDelete } = userDelete\n\n    useEffect(() => {\n        if(user && user.isAdmin) {\n            dispatch(userListAction())\n        } else {\n            history.push('/login')\n        }\n    }, [dispatch, history, user, successDelete])\n\n    useEffect(() => {\n        if (messageDelete) {\n            setTimeout(() => dispatch({type: USER_DELETE_RESET}), 5000)\n        }\n    }, [messageDelete, dispatch])\n\n    const deleteHandler = (userId) => {\n        dispatch(userDeleteAction(userId))\n    }\n\n    return (\n        <div>\n            {error ? <Message type=\"danger\">{error}</Message> :\n                loading ? <Loading /> : (\n                    <div>\n                        {messageDelete && <Message type=\"success\">{messageDelete}</Message>}\n                        <h3>USERS</h3>\n                        <hr></hr>\n                        <Table striped hover responsive className=\"table-xl\">\n                            <thead>\n                                <tr className=\"table-primary\">\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th>ACTIONS</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {users.map((user, i) => (\n                                    <tr key={i}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? \n                                            <i className=\"text-success fas fa-check-circle\"></i> :\n                                            <i className=\"text-warning fas fa-times-circle\"></i>\n                                        }\n                                        </td>\n                                        <td className=\"text-center\">\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                <Button variant=\"info\" size=\"sm\" title=\"Edit User\">\n                                                    <i className=\"fas fa-pen-square\"></i>\n                                                </Button>\n                                            </LinkContainer>\n                                            <Button onClick={() => deleteHandler(user._id)} variant=\"danger\" size=\"sm\" title=\"Delete User\">\n                                                <i className=\"fas fa-trash-alt\"></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    </div>\n                )\n            }\n        </div>\n    )\n}\n\nexport default UserListScreen\n","import React, {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom'\n// import local components\nimport Loading from '../components/Loading'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserProfile, userUpdateAction } from '../actions/userActions'\nimport { USER_PROFILE_RESET, USER_UPDATE_ADMIN_RESET } from '../constants/userConstants'\n\n//import third-party components and libraries\nimport { Form, Button } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\n\nfunction UserEditScreen({ history, match }) {\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n    \n    const dispatch = useDispatch()\n\n    const userProfile = useSelector(state => state.userProfile)\n    const { loading, error, userInfo } = userProfile\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { loading: loadingUpdate, success: successUpdate, error: errorUpdate } = userUpdate\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        const userData = {\n            name: name,\n            email: email,\n            isAdmin: isAdmin\n        }\n        dispatch(userUpdateAction(userId, userData))\n    }\n\n    useEffect(() => {\n        if(successUpdate) {\n            dispatch({\n                type: USER_UPDATE_ADMIN_RESET\n            })\n            dispatch({\n                type: USER_PROFILE_RESET\n            })\n            history.push('/admin/users')\n        } else {\n            if(!userInfo || userInfo._id !== Number(userId)) {\n                dispatch(getUserProfile(userId))\n            } else {\n                setName(userInfo.name)\n                setEmail(userInfo.email)\n                setIsAdmin(userInfo.isAdmin)\n            }\n        }\n    },[userInfo, dispatch, userId, successUpdate, history])\n\n\n    return (\n        <div>\n            <Link to=\"/admin/users\">\n                <Button variant=\"info\" size=\"sm\" className=\"mb-4\">{\"<<< Go Back\"}</Button>\n            </Link>\n            <FormContainer>\n            {loading ? <Loading width=\"500px\" height=\"500px\" /> : (\n                <div>\n                    {error && <Message type=\"danger\">{error}</Message>}\n                    {errorUpdate && <Message type=\"danger\">{errorUpdate}</Message>}\n                    {loadingUpdate && <Loading />}\n                    <h3>EDIT USER</h3>\n                    <hr></hr>\n                    <Form onSubmit={e => submitHandler(e)}>\n                        <Form.Group controlId=\"name\">\n                            <Form.Label>Full Name</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"Enter full name...\"\n                                value={name}\n                                onChange={e => setName(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control\n                                type=\"email\"\n                                placeholder=\"Enter email...\"\n                                value={email}\n                                onChange={e => setEmail(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"isAdmin\">\n                            <Form.Check\n                                type=\"checkbox\"\n                                label=\"Is Admin\"\n                                checked={isAdmin}\n                                onChange={e => setIsAdmin(e.target.checked)}\n                            />\n                        </Form.Group>\n\n                \n                        <Button type=\"submit\" variant=\"success\" block>Update</Button>\n                    </Form>\n                </div>\n            )}\n            </FormContainer>\n        </div>\n    )\n}\n\nexport default UserEditScreen\n","import React, { useEffect } from 'react'\n\n// import local components\nimport Loading from '../components/Loading'\nimport Message from '../components/Message'\nimport Rating from '../components/Rating'\nimport Paginator from '../components/Paginator'\nimport { listProducts, productCreateAction, productDeleteAction } from '../actions/productActions'\nimport { PRODUCT_DELETE_RESET, PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\n//import third-party components and libraries\nimport { Table, Button, Image, Row, Col } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\n\nfunction ProductListScreen({ history }) {\n    const dispatch = useDispatch()\n    let keyword = history.location.search\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { user } = userLogin\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products, numPages, page } = productList\n\n    const productCreate = useSelector(state => state.productCreate)\n    const {loading: loadingProduct, error: errorProduct, success:successProduct, product } = productCreate\n\n    const productDelete = useSelector(state => state.productDelete)\n    const { success: successDelete, loading: loadingDelete, message: messageDelete, error: errorDelete } = productDelete\n\n    useEffect(() => {\n        dispatch({type: PRODUCT_CREATE_RESET})\n        if(!user && !user?.isAdmin) {\n            history.push('/login')\n        }\n        if(successProduct) {\n            history.push(`/admin/product/${product._id}/edit`)\n        } else {\n            dispatch(listProducts(keyword))\n        }\n        \n    }, [dispatch, user, history, keyword, product, successDelete, successProduct])\n\n    useEffect(() => {\n        if(messageDelete) {\n            setTimeout(() => dispatch({type: PRODUCT_DELETE_RESET}), 5000)\n        }\n    }, [messageDelete, dispatch])\n\n    const deleteHandler = (productId) => {\n        dispatch(productDeleteAction(productId))\n    }\n\n    const createHandler = () => {\n        dispatch(productCreateAction())\n    }\n\n    return (\n        <div>\n            {error ? <Message type=\"danger\">{error}</Message> :\n                loading ? <Loading /> : (\n                    <div>\n                        {messageDelete && <Message type=\"success\">{messageDelete}</Message>}\n                        {errorProduct && <Message type=\"success\">{errorProduct}</Message>}\n                        {errorDelete && <Message type=\"success\">{errorDelete}</Message>}\n                        {loadingDelete && <Loading />}\n                        <Row>\n                            <Col>\n                                <h3>PRODUCTS</h3>\n                            </Col>\n                            <Col className=\"text-right\">\n                                {loadingProduct && <Loading />}\n                                <Button variant=\"success\" onClick={createHandler}><i className=\"fas fa-plus\"></i> CREATE PRODUCT</Button>\n                            </Col>\n                        </Row>\n                        <hr></hr>\n                        <div>\n                            <Table striped hover responsive className=\"table-xl\">\n                                <thead>\n                                    <tr className=\"table-primary\">\n                                        <th>ID</th>\n                                        <th>IMAGE</th>\n                                        <th>PRODUCT</th>\n                                        <th>PRICE</th>\n                                        <th>STOCK</th>\n                                        <th>BRAND</th>\n                                        <th>CATEGORY</th>\n                                        <th>ACTIONS</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {products.map((product, i) => (\n                                        <tr key={i}>\n                                            <td>{product._id}</td>\n                                            <td style={{maxWidth: '50px'}}>\n                                                <Image src={product.image} alt={product.name} fluid />  \n                                            </td>\n                                            <td>\n                                                {product.name}\n                                                <Rating value={product.rating} text={`${product.numReviews} reviews`} color={\"#f8e825\"} />\n                                            </td>\n                                            <td>${product.price}</td>\n                                            <td>{product.countInStock}</td>\n                                            <td>{product.brand}</td>\n                                            <td>{product.category}</td>\n                                            <td className=\"text-center\">\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                                    <Button variant=\"info\" size=\"sm\" title=\"Edit Product\">\n                                                        <i className=\"fas fa-pen-square\"></i>\n                                                    </Button>\n                                                </LinkContainer>\n                                                <Button onClick={() => deleteHandler(product._id)} variant=\"danger\" size=\"sm\" title=\"Delete Product\">\n                                                    <i className=\"fas fa-trash-alt\"></i>\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                            <Paginator numPages={numPages} page={page} isAdmin={true} />\n                        </div>\n                    </div>\n                )\n            }\n        </div>\n    )\n}\n\nexport default ProductListScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n// import local components\nimport Loading from '../components/Loading'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { displayProduct, productUpdateAction, productImageUploadAction } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n\n//import third-party components and libraries\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\n\nfunction ProductCreateScreen({ history, match }) {\n    const productId = match.params.id\n\n    const [name, setName] = useState('')\n    const [brand, setBrand] = useState('')\n    const [category, setCategory] = useState('')\n    const [price, setPrice] = useState(0)\n    const [image, setImage] = useState('')\n    const [description, setDescription] = useState('')\n    const [countInStock, setCountInStock] = useState(0)\n    const [isActive, setIsActive] = useState(false)\n    \n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { user } = userLogin\n    \n    const productDetails = useSelector(state => state.productDetails)\n    const { loading: loadingProduct, error: errorProduct, product } = productDetails\n\n    const productUpdate = useSelector(state => state.productUpdate)\n    const{ loading: loadingUpdate, success: successUpdate, error: errorUpdate } = productUpdate\n\n    const productImage = useSelector(state => state.productImageUpload)\n    const { loading: loadingImage, error: errorImage } = productImage\n\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        const productData = {\n            name: name,\n            brand: brand,\n            category: category,\n            price: price,\n            description: description,\n            countInStock: countInStock,\n            isActive: isActive\n        }\n        dispatch(productUpdateAction(productId, productData))\n    }\n\n    const uploadImageHandler = async (e) => {\n        const imageFile = e.target.files[0]\n        const formData = new FormData()\n        formData.append('image', imageFile)\n        formData.append('productId', productId)\n        dispatch(productImageUploadAction(formData))\n        setImage(imageFile.name)\n    }\n\n    useEffect(() => {\n        if(user && user.isAdmin) {\n            if(successUpdate) {\n                dispatch({type: PRODUCT_UPDATE_RESET})\n                history.push('/admin/products')\n            } else {\n                if(!product || product?._id !== Number(productId)) {\n                    dispatch(displayProduct(productId))\n                } else {\n                    setName(product.name)\n                    setPrice(product.price)\n                    setCategory(product.category)\n                    setBrand(product.brand)\n                    setImage(product.image)\n                    setDescription(product.description)\n                    setCountInStock(product.countInStock)\n                    setIsActive(product.isActive)\n                }    \n            }\n        } else {\n            history.push('/login')\n        }\n        \n    },[dispatch, product, productId, successUpdate, user, history])\n\n\n    return (\n        <div>\n            <Link to=\"/admin/products\">\n                <Button variant=\"info\" size=\"sm\" className=\"mb-4\">{\"<<< Go Back\"}</Button>\n            </Link>\n            <FormContainer>\n            {loadingProduct ? <Loading width=\"500px\" height=\"500px\" /> : (\n                <div>\n                    {errorProduct && <Message type=\"danger\">{errorProduct}</Message>}\n                    {errorUpdate && <Message type=\"danger\">{errorUpdate}</Message>}\n                    {errorImage && <Message type=\"danger\">{errorImage}</Message>}\n\n                    <h3>EDIT PRODUCT</h3>\n                    <hr></hr>\n                    <Form onSubmit={e => submitHandler(e)}>\n                        <Form.Group controlId=\"name\">\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"Enter product name...\"\n                                value={name}\n                                onChange={e => setName(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Row>\n                            <Form.Group as={Col} controlId=\"brand\">\n                                <Form.Label>Brand</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Enter brand name...\"\n                                    value={brand}\n                                    onChange={e => setBrand(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"category\">\n                                <Form.Label>Category</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Enter product category...\"\n                                    value={category}\n                                    onChange={e => setCategory(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n                        </Row>\n\n                        <Form.Group controlId=\"description\">\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control\n                                as=\"textarea\"\n                                rows={4}\n                                placeholder=\"Enter description...\"\n                                value={description}\n                                onChange={e => setDescription(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n                        <Row>\n                            <Form.Group as={Col} controlId=\"price\">\n                                <Form.Label>Price</Form.Label>\n                                <Form.Control\n                                    required\n                                    type=\"number\"\n                                    min=\"1\"\n                                    step=\"any\"\n                                    placeholder=\"Enter price...\"\n                                    value={price}\n                                    onChange={e => setPrice(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n                        \n                            <Form.Group as={Col} controlId=\"count\">\n                                    <Form.Label>Count In Stock</Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        placeholder=\"Enter stock count...\"\n                                        value={countInStock}\n                                        onChange={e => setCountInStock(e.target.value)}\n                                    >\n                                    </Form.Control>\n                            </Form.Group>\n                        </Row>\n                        <Form.Group controlId=\"formFile\">\n                            <Form.Label>Image</Form.Label>\n                            <Form.Control \n                                type=\"text\"\n                                value={image}\n                                onChange={e => setImage(e.target.value)}\n                            />\n                            {loadingImage && <Loading />}\n                            <Form.File\n                                type=\"image-file\"\n                                label=\"Upload image\"\n                                custom\n                                onChange={uploadImageHandler}\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"isActive\">\n                            <Form.Check\n                                type=\"checkbox\"\n                                label=\"Is Active\"\n                                checked={isActive}\n                                onChange={e => setIsActive(e.target.checked)}\n                            />\n                        </Form.Group>\n\n                \n                        <Button type=\"submit\" variant=\"success\" block>Update</Button>\n                        { loadingUpdate && <Loading />}\n                    </Form>\n                </div>\n            )}\n            </FormContainer>\n        </div>\n    )\n}\n\nexport default ProductCreateScreen\n","import React, {useState, useEffect} from 'react'\n\n// import local components\nimport Loading from '../components/Loading'\nimport Message from '../components/Message'\nimport { orderListAction } from '../actions/orderActions'\n\n//import third-party components and libraries\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\n\nfunction OrderListScreen({ history }) {\n    const dispatch = useDispatch()\n    const userLogin = useSelector(state => state.userLogin)\n    const { user } = userLogin\n    const orderList = useSelector(state => state.orderList)\n    const { loading, error, orders } = orderList\n\n    const [displayOrderItems, setDisplayOrderItems] = useState([])\n\n    useEffect(() => {\n        if(user && user.isAdmin) {\n            dispatch(orderListAction())\n        } else {\n            history.push('/login')\n        }\n        \n    }, [dispatch, user, history])\n\n    const getOrderTotal = (order) => {\n        return order.orderItems.reduce((acc, o) => acc+Number(o.price)*Number(o.qty), 0).toFixed(2)\n    }\n\n    const displayItems = (order) => {\n        return (\n            <div style={{backgroundColor: 'white', padding: '2px', minWidth: '180px'}}>\n                <Row>\n                    <Col>\n                        <small>ITEM</small>\n                    </Col>\n                    <Col>\n                        <small>PRICE</small>\n                    </Col>\n                    <Col>\n                        <small>QTY</small>\n                    </Col>\n                </Row>\n                <hr className=\"my-1\"></hr>\n                {order.orderItems.map((item, i) => (\n                    <div key={i}>\n                        <Row>\n                            <Col>\n                                <small>{item.name}</small>\n                            </Col>\n                            <Col>\n                                <small>${item.price}</small>\n                            </Col>\n                            <Col>\n                                <small>{item.qty}</small>\n                            </Col>\n                        </Row>\n\n                        {i !== order.orderItems.length-1 && <hr className=\"my-1\"></hr>}\n                    </div>\n                    ))\n                }\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            {error ? <Message type=\"danger\">{error}</Message> :\n                loading ? <Loading /> : (\n                    <div>\n                        \n                        <h3>ORDERS</h3>\n                        <hr></hr>\n                        <Table striped hover responsive className=\"table-xl\">\n                            <thead>\n                                <tr className=\"table-primary\">\n                                    <th>ID</th>\n                                    <th>USER</th>\n                                    <th>DATE</th>\n                                    <th>ITEMS</th>\n                                    <th>SUBTOTAL</th>\n                                    <th>TAX</th>\n                                    <th>SHIPPING</th>\n                                    <th>TOTAL</th>\n                                    <th>PAID</th>\n                                    <th>DELIVERED</th>\n                                    <th>ACTIONS</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {orders.map((order, i) => (\n                                    <tr key={i}>\n                                        <td>{order._id}</td>\n                                        <td>\n                                            {order.user.username ? (order.user.name && order.user.name) : \n                                            <span className=\"text-warning\">MyShop User</span>}\n                                        </td>\n                                        <td>\n                                            {` ${new Date(order.createdAt).toLocaleString('en-gb', {dateStyle:'medium', timeStyle: 'medium', hourCycle: 'h12'})}`}\n                                        </td>\n                                        <td>\n                                            <Button \n                                                size=\"sm\" \n                                                className=\"btn-block btn-info\" \n                                                onClick={() => (\n                                                    displayOrderItems.includes(order._id) ? \n                                                    setDisplayOrderItems(displayOrderItems.filter((i, _) => i !== order._id)) :\n                                                    setDisplayOrderItems([...displayOrderItems, order._id]\n                                                ))}\n                                            >\n                                                {displayOrderItems.includes(order._id) ? \"Hide\" : \"Show\"}\n                                            </Button>\n                                            {displayOrderItems.includes(order._id) && displayItems(order)}\n                                        </td>\n                                        <td>${getOrderTotal(order)}</td>\n                                        <td>${order.taxPrice}</td>\n                                        <td>${order.shippingPrice}</td>\n                                        <td><strong>${order.totalPrice}</strong></td>\n                                        <td>\n                                            { order.isPaid ?\n                                                <span className=\"d-flex flex-column text-success\">\n                                                    <i className=\"far fa-check-circle\"></i> \n                                                    <small>{` ${new Date(order.paidAt).toLocaleString('en-gb', {dateStyle:'medium', timeStyle: 'medium', hourCycle: 'h12'})}`}</small>\n                                                    </span> : \n                                                <span className=\"text-warning\"><i className=\"far fa-times-circle\"></i></span>\n                                            }\n                                        </td>\n                                        <td>\n                                            { order.isDelivered ?\n                                                <span className=\"d-flex flex-column text-success\">\n                                                    <i className=\"far fa-check-circle\"></i> \n                                                    <small>{` ${new Date(order.deliveredAt).toLocaleString('en-gb', {dateStyle:'medium', timeStyle: 'medium', hourCycle: 'h12'})}`}</small>\n                                                    </span> : \n                                                <span className=\"text-warning\"><i className=\"far fa-times-circle\"></i></span>\n                                            }\n                                        </td>\n                                        <td>\n                                            <LinkContainer to={`/order/${order._id}`}>\n                                                <Button size=\"sm\" className=\"btn-info\">Details</Button>\n                                            </LinkContainer>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    </div>\n                )\n            }\n        </div>\n    )\n}\n\nexport default OrderListScreen\n","import { HashRouter as Router, Route } from 'react-router-dom'\n\n//import local components\nimport Footer from './components/Footer'\nimport Header from './components/Header'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen' \nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\n\n//import third-party components and libraries\nimport { Container } from 'react-bootstrap'\nimport ProductCreateScreen from './screens/ProductCreateScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/products/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/admin/users' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route path='/admin/products' component={ProductListScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductCreateScreen} />\n          <Route path='/admin/orders' component={OrderListScreen} />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport { \n    productDeleteReducer, \n    productDetailsReducer, \n    productListReducer, \n    productCreateReducer, \n    productUpdateReducer, \n    productImageUploadReducer,\n    productReviewCreateReducer,\n    productTopListReducer\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport { \n    orderCreateReducer, \n    orderDeliverReducer, \n    orderDetailsReducer, \n    orderListReducer, \n    orderPayReducer, \n    userOrderListReducer\n} from './reducers/orderReducers'\nimport { \n    updateProfileReducer, \n    userLoginReducer, \n    userProfileReducer, \n    userRegisterReducer , \n    userListReducer, \n    userDeleteReducer,\n    userUpdateReducer\n} from './reducers/userReducers'\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userProfile: userProfileReducer,\n    updateUserProfile: updateProfileReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    userOrders: userOrderListReducer,\n    userList: userListReducer,\n    userDelete: userDeleteReducer,\n    userUpdate: userUpdateReducer,\n    productDelete: productDeleteReducer,\n    productCreate: productCreateReducer,\n    productUpdate: productUpdateReducer,\n    productImageUpload: productImageUploadReducer,\n    orderList: orderListReducer,\n    orderDeliver: orderDeliverReducer,\n    productReviewCreate: productReviewCreateReducer,\n    topProducts: productTopListReducer,\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? \n    JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst userFromStorage = localStorage.getItem('user') ? \n    JSON.parse(localStorage.getItem('user')) : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? \n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\nconst paymentMethodFromStorage = localStorage.getItem('paymentMethod') ?\n    JSON.parse(localStorage.getItem('paymentMethod')) : ''\n\nconst initialState = {\n    cart : { \n        cartItems: cartItemsFromStorage ,\n        shippingAddress: shippingAddressFromStorage,\n        paymentMethod: paymentMethodFromStorage\n    },\n    userLogin: { \n        user: userFromStorage\n    }\n}\nconst middleware = [thunk]\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store","import { \n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_TOP_LIST_SUCCESS,\n    PRODUCT_TOP_LIST_REQUEST,\n    PRODUCT_TOP_LIST_FAIL,\n\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n    PRODUCT_DELETE_RESET,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_CREATE_RESET,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_UPDATE_RESET,\n\n    PRODUCT_IMAGE_UPLOAD_REQUEST,\n    PRODUCT_IMAGE_UPLOAD_SUCCESS,\n    PRODUCT_IMAGE_UPLOAD_FAIL,\n\n    PRODUCT_REVIEW_CREATE_REQUEST,\n    PRODUCT_REVIEW_CREATE_SUCCESS,\n    PRODUCT_REVIEW_CREATE_FAIL,\n    PRODUCT_REVIEW_CREATE_RESET,\n\n } from '../constants/productConstants'\n\nexport const productListReducer = (state={products: []}, action) => {\n    switch (action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return {\n                loading: true,\n                ...state\n            }\n        case PRODUCT_LIST_SUCCESS:\n            return {\n                loading: false,\n                products: action.payload.products,\n                page: action.payload.page,\n                numPages: action.payload.numPages\n            }\n        case PRODUCT_LIST_FAIL: \n            return {\n                loading: false,\n                error: action.payload,\n            }\n        default:\n            return state\n    }\n}\n\nexport const productTopListReducer = (state={products: []}, action) => {\n    switch (action.type) {\n        case PRODUCT_TOP_LIST_REQUEST:\n            return {\n                loading: true,\n                ...state\n            }\n        case PRODUCT_TOP_LIST_SUCCESS:\n            return {\n                loading: false,\n                products: action.payload,\n            }\n        case PRODUCT_TOP_LIST_FAIL: \n            return {\n                loading: false,\n                error: action.payload,\n            }\n        default:\n            return state\n    }\n}\n\nexport const productDetailsReducer = (state={product: {reviews: []}}, action) => {\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return {\n                loading: true,\n                ...state\n            }\n        case PRODUCT_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                product: action.payload\n            }\n        case PRODUCT_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default: \n            return state\n    }\n}\n\nexport const productDeleteReducer = (state={}, action) => {\n    switch (action.type) {\n        case PRODUCT_DELETE_REQUEST:\n            return {\n                loading: true\n            }\n    \n        case PRODUCT_DELETE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                message: action.payload\n            }\n        \n        case PRODUCT_DELETE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        \n        case PRODUCT_DELETE_RESET:\n            return {}\n        \n        default:\n            return state\n    }\n}\n\nexport const productCreateReducer = (state={}, action) => {\n    switch(action.type) {\n        case PRODUCT_CREATE_REQUEST:\n            return {\n                loading: true\n            }\n        \n        case PRODUCT_CREATE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                product: action.payload\n            }\n        \n        case PRODUCT_CREATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        \n        case PRODUCT_CREATE_RESET:\n            return {}\n            \n        default:\n            return state\n    }\n}\n\nexport const productUpdateReducer = (state={}, action) => {\n    switch(action.type) {\n        case PRODUCT_UPDATE_REQUEST:\n            return {\n                loading: true\n            }\n        \n        case PRODUCT_UPDATE_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n        \n        case PRODUCT_UPDATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        \n        case PRODUCT_UPDATE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\nexport const productImageUploadReducer = (state={}, action) => {\n    switch(action.type) {\n        case PRODUCT_IMAGE_UPLOAD_REQUEST:\n            return { loading: true }\n        \n        case PRODUCT_IMAGE_UPLOAD_SUCCESS:\n            return { loading: false, success: true }\n        \n        case PRODUCT_IMAGE_UPLOAD_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        \n        default:\n            return state\n    }\n}\n\nexport const productReviewCreateReducer = (state={}, action) => {\n    switch(action.type) {\n        case PRODUCT_REVIEW_CREATE_REQUEST:\n            return {\n                loading: true\n            }\n        \n        case PRODUCT_REVIEW_CREATE_SUCCESS:\n            return {\n                loading: false,\n                message: action.payload,\n            }\n        \n        case PRODUCT_REVIEW_CREATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case PRODUCT_REVIEW_CREATE_RESET:\n            return {}\n        \n        default:\n            return state\n    }\n}","import {\n    CART_ADD_ITEM,\n    CART_REMOVE_ITEM,\n    CART_SAVE_SHIPPING_ADDRESS,\n    CART_SAVE_PAYMENT_METHOD,\n    CART_RESET,\n} from '../constants/cartConstants'\n\nexport const cartReducer = (state={cartItems: []}, action) => {\n    switch (action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload\n            const existItem = state.cartItems.find(cartItem => cartItem.product === item.product)\n            if (existItem) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map(cartItem => (\n                        cartItem.product === existItem.product ? item : cartItem\n                    ))\n                }\n            } else {\n                return {\n                    ...state, \n                    cartItems: [...state.cartItems, item]\n                }\n            }\n        case CART_REMOVE_ITEM:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(cartItem => cartItem.product !== action.payload)\n            }\n\n        case CART_SAVE_SHIPPING_ADDRESS:\n            return {\n                ...state,\n                shippingAddress: action.payload\n            }\n\n        case CART_SAVE_PAYMENT_METHOD:\n            return {\n                ...state,\n                paymentMethod: action.payload\n            }\n        \n        case CART_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n","import { \n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_PROFILE_REQUEST,\n    USER_PROFILE_SUCCESS,\n    USER_PROFILE_FAIL,\n    USER_PROFILE_RESET,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_UPDATE_RESET,\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n    USER_UPDATE_ADMIN_REQUEST,\n    USER_UPDATE_ADMIN_SUCCESS,\n    USER_UPDATE_ADMIN_FAIL,\n    USER_UPDATE_ADMIN_RESET,\n    USER_DELETE_RESET,\n } from '../constants/userConstants'\n\nexport const userLoginReducer = (state={ user: {} }, action) => {\n    switch(action.type) {\n        case USER_LOGIN_REQUEST:\n            return {\n                loggingIn: true,\n                ...state,\n            }\n        case USER_LOGIN_SUCCESS:\n            return {\n                loggingIn: false,\n                user: action.payload,\n            }\n        case USER_LOGOUT:\n            return {}\n        case USER_LOGIN_FAIL:\n            return {\n                loggingIn: false,\n                error: action.payload,\n            }\n        default:\n            return state\n    }\n}\n\nexport const userRegisterReducer = (state={}, action) => {\n    switch(action.type) {\n        case USER_REGISTER_REQUEST:\n            return {\n                registering: true,\n                ...state,\n            }\n        case USER_REGISTER_SUCCESS:\n            return {\n                registering: false,\n                user: action.payload,\n            }\n        case USER_REGISTER_FAIL:\n            return {\n                registering: false,\n                error: action.payload,\n            }\n        \n        default:\n            return state\n    }\n}\n\nexport const userProfileReducer = (state={ user: {} }, action) => {\n    switch(action.type) {\n        case USER_PROFILE_REQUEST:\n            return {\n                loading: true,\n                ...state,\n            }\n        case USER_PROFILE_SUCCESS:\n            return {\n                loading: false,\n                userInfo: action.payload,\n            }\n        case USER_PROFILE_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            }\n        case USER_PROFILE_RESET:\n            return { user: {} }\n        default:\n            return state\n    }\n}\n\nexport const updateProfileReducer = (state= {}, action) => {\n    switch(action.type) {\n        case USER_UPDATE_REQUEST:\n            return {\n                updating: true,\n            }\n        case USER_UPDATE_RESET:\n            return {}\n        case USER_UPDATE_SUCCESS:\n            return {\n                updating: false,\n                success: true,\n                userInfo: action.payload,\n            }\n        case USER_UPDATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            }\n        default:\n            return state\n    }\n}\n\nexport const userListReducer = (state = {users: []}, action) => {\n    switch(action.type) {\n        case USER_LIST_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        \n        case USER_LIST_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                users: action.payload\n            }\n        \n        case USER_LIST_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n        \n        case USER_LIST_RESET:\n            return { users: [] }\n        \n        default:\n            return state\n    }\n}\n\nexport const userDeleteReducer = (state={}, action) => {\n    switch(action.type){\n        case USER_DELETE_REQUEST:\n            return {\n                loading: true\n            }\n        \n        case USER_DELETE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                message: action.payload\n            }\n        \n        case USER_DELETE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }  \n        \n        case USER_DELETE_RESET:\n            return {}\n        \n        default:\n            return state\n    }\n}\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n    switch(action.type) {\n        case USER_UPDATE_ADMIN_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case USER_UPDATE_ADMIN_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                user: action.payload\n            }\n\n        case USER_UPDATE_ADMIN_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n        \n        case USER_UPDATE_ADMIN_RESET:\n            return {\n                user: {}\n            }\n        \n        default:\n            return state\n    }\n}","import { \n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n    ORDER_CREATE_RESET,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    ORDER_DETAILS_RESET,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_USER_REQUEST,\n    ORDER_LIST_USER_SUCCESS,\n    ORDER_LIST_USER_FAIL,\n    ORDER_LIST_USER_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n    ORDER_LIST_RESET,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n\n } from '../constants/orderConstants'\n\n export const orderCreateReducer = (state={}, action) => {\n    switch(action.type) {\n        case ORDER_CREATE_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_CREATE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                order: action.payload\n            }\n        \n        case ORDER_CREATE_FAIL:\n            return {\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        \n        case ORDER_CREATE_RESET:\n            return {}\n        \n        default:\n            return state\n    }\n }\n\n export const orderDetailsReducer = (state={order: {}, loading:true}, action) => {\n    switch(action.type) {\n        case ORDER_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        \n        case ORDER_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n        \n        case ORDER_DETAILS_FAIL:\n            return {\n                error: action.payload,\n            }\n        \n        case ORDER_DETAILS_RESET:\n            return {}\n        \n        default:\n            return state\n    }\n }\n\n export const orderPayReducer = (state = {}, action) => {\n    switch(action.type) {\n        case ORDER_PAY_REQUEST:\n            return {\n                loading: true\n            }\n        \n        case ORDER_PAY_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n        \n        case ORDER_PAY_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n        \n        case ORDER_PAY_RESET:\n            return {}\n        \n        default:\n            return state\n    }\n }\n\n export const userOrderListReducer = (state={orders: []}, action) => {\n     switch(action.type) {\n        case ORDER_LIST_USER_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        \n        case ORDER_LIST_USER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                orders: action.payload\n            }\n        \n        case ORDER_LIST_USER_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n        \n        case ORDER_LIST_USER_RESET:\n            return { orders: [] }\n        \n        default:\n            return state\n     }\n }\n\n export const orderListReducer = (state={orders: []}, action) => {\n     switch(action.type) {\n         case ORDER_LIST_REQUEST:\n             return { \n                loading: true,\n                ...state \n            }\n        \n        case ORDER_LIST_SUCCESS:\n            return { \n                loading:false,\n                orders: action.payload\n            }\n\n        case ORDER_LIST_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        \n        case ORDER_LIST_RESET:\n            return {}\n\n        default:\n            return state\n     }\n }\n\n export const orderDeliverReducer = (state = {}, action) => {\n    switch(action.type) {\n        case ORDER_DELIVER_REQUEST:\n            return {\n                loading: true\n            }\n        \n        case ORDER_DELIVER_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n        \n        case ORDER_DELIVER_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n        \n        case ORDER_DELIVER_RESET:\n            return {}\n        \n        default:\n            return state\n    }\n }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css'\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}